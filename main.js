!function(){"use strict";var e=class{constructor(e,t){!function(e,t,s){t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s}(this,"_hasInvalidInput",(()=>this._inputList.some((e=>!e.validity.valid)))),this._inputSelector=e.inputSelector,this._fieldsetSelector=e.fieldsetSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}resetErrors(){this._inputList.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this.enableButton()}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const s=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}};function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var s=class{constructor(e){t(this,"_handleClickClose",(e=>{e.target.classList.contains("popup-box")&&this.close()})),t(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup-box__close-btn")}open(){this._popup.classList.add("popup-box_opened"),this._popup.addEventListener("mousedown",this._handleClickClose),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup-box_opened"),this._popup.removeEventListener("mousedown",this._handleClickClose),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close()))}},r=class extends s{constructor(e){let{popupSelector:t,submitHandler:s}=e;super(t),this.submitHandler=s,this._form=this._popup.querySelector(".form"),this._inputList=Array.from(this._form.querySelectorAll(".form__input")),this._submitButton=this._popup.querySelector(".form__save-btn"),this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this.submitHandler(this._getInputValues()),this.close()}))}close(){super.close(),this._form.reset()}renderLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}};const n=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_fetchResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._fetchResponse)}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._fetchResponse)}updateUserInfo(e,t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._processResponse)}uploadCard(e){let{name:t,link:s}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._fetchResponse)}likeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._fetchResponse)}unLikeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._fetchResponse)}updateAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._fetchResponse)}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"0b69bf19-42d1-4bf8-9ff1-9675ed788767","Content-Type":"application/json"}}),i=document.querySelector(".form__input_type_name"),o=document.querySelector(".form__input_type_job"),a=document.querySelector(".profile__edit-btn"),l=document.querySelector(".profile__add-btn"),c=document.querySelector(".form-edit"),u=document.querySelector(".form-add"),h=document.querySelector(".form-avatar"),_=document.querySelector(".profile__edit-picture"),d={inputSelector:".form__input",fieldsetSelector:".form__set",submitButtonSelector:".form__save-btn",inactiveButtonClass:"form__save-btn_disabled",inputErrorClass:"form__input_type_error",errorClass:"popup__error_visible"},p=new class{constructor(e){let{userNameSelector:t,userJobSelector:s,avatarSelector:r}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent,avatar:this._avatar.src,id:this._userId}}setUserInfo(e,t,s){this._profileName.textContent=e,this._profileJob.textContent=t,this._userId=s}setAvatar(e){this._avatar.src=e}}({userNameSelector:".profile__name",userJobSelector:".profile__job",avatarSelector:".profile__avatar"}),m=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}appendItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}}({renderer:e=>{m.appendItem(E(e))}},".elements"),b=new r({popupSelector:".popup-box_edit",submitHandler:e=>{const t=p.getUserInfo(),s={name:t.name,"about-me":t.job};b.setInputValues(s),b.renderLoading(!0),n.updateUserInfo(e.name,e.job).then((()=>{p.setUserInfo(e.name,e.job)})).catch(console.log).finally((()=>{b.renderLoading(!1)}))}}),f=new r({popupSelector:".popup-box_add",submitHandler:e=>{f.renderLoading(!0);const t={name:e.title,link:e["image-link"]};n.uploadCard(t).then((e=>{const t=document.querySelector(".elements"),s=E(e);t.prepend(s)})).catch(console.log).finally((()=>{f.renderLoading(!1)}))}}),v=new class extends s{constructor(e){super(e)}open(e,t){const s=this._popup.querySelector(".popup-box__image"),r=this._popup.querySelector(".popup-box__caption");super.open(),s.alt=e,s.src=t,r.textContent=e}}(".popup-box_image"),L=new class extends s{constructor(e,t){super(e),this._submitHandler=t,this._submitButton=this._popup.querySelector(".form__save-btn"),this._submitButtonText=this._submitButton.textContent}setAction(e){this._submitHandler=e}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(),this.close()})),super.setEventListeners()}renderLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}}(".popup-box_delete"),k=new r({popupSelector:".popup-box_avatar",submitHandler:e=>{k.renderLoading(!0),n.updateAvatar(e.avatar).then((e=>{p.setAvatar(e.avatar)})).catch(console.log).finally((()=>{k.renderLoading(!1)}))}});b.setEventListeners(),f.setEventListeners(),v.setEventListeners(),k.setEventListeners(),L.setEventListeners();const S=new e(d,c);S.enableValidation();const y=new e(d,u);y.enableValidation();const C=new e(d,h);function E(e){const t=p.getUserInfo().id,s=new class{constructor(e,t,s,r,n,i){var o,a;a=()=>this._like.classList.toggle("element__like_active"),(o="_toggleLike")in this?Object.defineProperty(this,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):this[o]=a,this._title=e.name,this._image=e.link,this._data=e,this._userId=s,this._cardSelector=t,this._handleCardClick=r,this._handleDeleteButton=n,this._handleLikeClick=i,this._likes=this._data.likes}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}generateCard(){this._element=this._getTemplate(),this._like=this._element.querySelector(".element__like"),this._deleteBtn=this._element.querySelector(".element__delete-icon "),this._likeButton=this._element.querySelector(".element__like"),this._likeCounter=this._element.querySelector(".element__like_number"),this._setEventListeners();const e=this._element.querySelector(".element__image"),t=this._element.querySelector(".element__paragraph");return this._renderLikes(),e.src=this._image,t.textContent=this._title,e.alt=this._title,this._data.owner._id!==this._userId&&(this._deleteBtn.removeEventListener("click",this._handleDeleteButton),this._deleteBtn.style="display: none"),this._element}removeCard(){this._element.remove()}_renderLikes(){this._likeCounter.textContent=this._likes.length,this.isLiked()?this._likeButton.classList.add("element__like_active"):this._likeButton.classList.remove("element__like_active")}updateLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.map((e=>e._id)).find((e=>e===this._userId))}_setEventListeners(){this._like.addEventListener("click",this._handleLikeClick),this._deleteBtn.addEventListener("click",this._handleDeleteButton),this._element.querySelector(".element__image").addEventListener("click",this._handleCardClick)}}(e,"#template-element",t,(()=>{v.open(e.name,e.link)}),(()=>{L.open(),L.setAction((()=>{L.renderLoading(!0),n.deleteCard(e._id).then((()=>{s.removeCard()})).catch(console.log).finally((()=>{L.renderLoading(!1)}))}))}),(()=>{s.isLiked()?n.unLikeCard(e._id).then((e=>{s.updateLikes(e.likes)})).catch(console.log):n.likeCard(e._id).then((e=>{s.updateLikes(e.likes)})).catch(console.log)}));return s.generateCard()}C.enableValidation(),Promise.all([n.getUserInfo(),n.getInitialCards()]).then((e=>{let[t,s]=e;p.setUserInfo(t.name,t.about,t._id),p.setAvatar(t.avatar),m.renderItems(s)})).catch(console.log),a.addEventListener("click",(function(){b.open();const e=p.getUserInfo();i.value=e.name,o.value=e.job,S.resetErrors(),S.enableButton()})),l.addEventListener("click",(function(){f.open(),y.disableButton(),y.resetErrors()})),_.addEventListener("click",(()=>{k.open(),C.disableButton(),C.resetErrors()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,