!function(){"use strict";function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var t=class{constructor(e,t){!function(e,t,s){t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s}(this,"_hasInvalidInput",(()=>this._inputList.some((e=>!e.validity.valid)))),this._inputSelector=e.inputSelector,this._fieldsetSelector=e.fieldsetSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}resetErrors(){this._inputList.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this.enableButton()}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const s=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}};function s(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var n=class{constructor(e){s(this,"_handleClickClose",(e=>{e.target.classList.contains("popup-box")&&this.close()})),s(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup-box__close-btn")}open(){this._popup.classList.add("popup-box_opened"),this._popup.addEventListener("mousedown",this._handleClickClose),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup-box_opened"),this._popup.removeEventListener("mousedown",this._handleClickClose),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close()))}},i=class extends n{constructor(e,t){super(e),this.submitHandler=t,this._form=this._popup.querySelector(".form"),this._inputList=Array.from(this._form.querySelectorAll(".form__input"))}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this.submitHandler(this._getInputValues()),this.close()}))}close(){super.close(),this._form.reset()}};const r=document.querySelector(".form__input_type_name"),o=document.querySelector(".form__input_type_job"),l=document.querySelector(".profile__edit-btn"),a=document.querySelector(".profile__add-btn"),c=document.querySelector(".form-edit"),u=document.querySelector(".form-add"),_={inputSelector:".form__input",fieldsetSelector:".form__set",submitButtonSelector:".form__save-btn",inactiveButtonClass:"form__save-btn_disabled",inputErrorClass:"form__input_type_error",errorClass:"popup__error_visible"},d=new i(".popup-box_edit",(e=>{m.setUserInfo(e.name,e.job)})),p=new i(".popup-box_add",(e=>{const t=b({name:e.title,link:e["image-link"]});f.prependItem(t)})),h=new class extends n{constructor(e){super(e)}open(e,t){const s=this._popup.querySelector(".popup-box__image"),n=this._popup.querySelector(".popup-box__caption");super.open(),s.alt=e,s.src=t,n.textContent=e}}(".popup-box_image");d.setEventListeners(),p.setEventListeners(),h.setEventListeners();const m=new class{constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileJob.textContent=t}}({userNameSelector:".profile__name",userJobSelector:".profile__job"});function b(t){return new class{constructor(t,s,n){e(this,"_toggleLike",(()=>this._like.classList.toggle("element__like_active"))),e(this,"_deleteElement",(()=>this._element.remove())),this._title=t.name,this._image=t.link,this._cardSelector=s,this._handleCardClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}generateCard(){this._element=this._getTemplate(),this._like=this._element.querySelector(".element__like"),this._deleteBtn=this._element.querySelector(".element__delete-icon "),this._setEventListeners();const e=this._element.querySelector(".element__image"),t=this._element.querySelector(".element__paragraph");return e.src=this._image,t.textContent=this._title,e.alt=this._title,this._element}_setEventListeners(){this._like.addEventListener("click",this._toggleLike),this._deleteBtn.addEventListener("click",this._deleteElement),this._element.querySelector(".element__image").addEventListener("click",this._handleCardClick)}}(t,"#template-element",(()=>{h.open(t.name,t.link)})).generateCard()}l.addEventListener("click",(function(){d.open();const e=m.getUserInfo();r.value=e.name,o.value=e.job,v.resetErrors(),v.enableButton()})),a.addEventListener("click",(function(){p.open(),y.disableButton(),y.resetErrors()}));const f=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderedItems=s,this._renderer=n,this._container=document.querySelector(t)}addItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}renderer(){this._renderedItems.forEach((e=>{this._renderer(e)}))}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{f.addItem(b(e))}},".elements");f.renderer();const v=new t(_,c);v.enableValidation();const y=new t(_,u);y.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,